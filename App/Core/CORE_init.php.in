<?php
/*
 * @author Anakeen
 * @license http://www.fsf.org/licensing/licenses/agpl-3.0.html GNU Affero General Public License
 * @package FDL
*/
/**
 * @mainpage Dynacase Core Documentation
 * @brief
 * @author Anakeen <labs@anakeen.com>
 *
 *
 *
 * @par Reference manual:
 * The Dynacase Reference Manual gives you all informations you need to design, code, test your applications.
 This manual should be your daily companion, with all answers to all questions when developping on Dynacase Platform.
 * ==> http://docs.anakeen.com
 *
 * @par Explanation of related pages
 * @li Methods for document menus@n These methods are tagged with @@apiExpose tag@n List methods which can be called by FDL:FDL_METHOD action
 * @li Error codes@n List all code's error which are returned when a problem appear. Most of them are send when import families definition's
 * @li Methods used as search conditions@n These methods results can be used as criteria to filter document's searches@n They are tagged with @@searchLabel tag
 * @li Supported Apis@n These methods are described in reference documentation. Their signature (argument and return) are maintained from one version to another
 * @li Deprecated List@n These methods are no longer supported. They can be removed in the next version
 *
 * @note Build
 *  @VERSION@-@RELEASE@, @LOGDATE@
 *
 */
/**
 * Application parameters
 *
 * @author Anakeen
 * @license http://www.fsf.org/licensing/licenses/agpl-3.0.html GNU Affero General Public License
 * @package FDL
 * @subpackage CORE
 */
/**
 */
/**
 * Application parameters
 * @name $app_const
 * @global array $GLOBALS['app_const']
 */
global $app_const;
$app_const = array(
    "INIT" => "yes",
    "CORE_LOGLEVEL" => "@LOGLEVEL@",
    "VERSION" => array(
        "val" => "@VERSION@-@RELEASE@",
        "descr" => N_("application version") ,
        "kind" => "static"
    ) ,
    "CORE_FRONTPAGE" => array(
        "val" => "",
        "descr" => N_("Dynacase frontpage description") ,
        "kind" => "text"
    ) ,
    "WVERSION" => array(
        "val" => "@VERSION@-@RELEASE@",
        "descr" => N_("version identificator") ,
        "kind" => "static",
        "global" => "Y"
    ) ,
    "USE_FREEDOM_USER" => array(
        "val" => "yes",
        "descr" => N_("use dynacase user management") ,
        "kind" => "enum(yes|no)",
        "global" => "Y"
    ) ,
    "STYLE" => array(
        "val" => "MODERN",
        "descr" => N_("default style") ,
        "kind" => "readonly",
        "user" => "N"
    ) ,
    "FONTSIZE" => array(
        "val" => "normal",
        "descr" => N_("font size") ,
        "user" => "N",
        "kind" => "enum(small|normal|large|x-large)"
    ) ,
    "CORE_PUBDIR" => array(
        "val" => "@prefix@",
        "descr" => N_("Publication directory") ,
        "kind" => "readonly"
    ) ,
    "CORE_DB" => array(
        "val" => "",
        "kind" => "readonly",
        "descr" => N_("Database information")
    ) ,
    "CORE_TMPDIR" => "./var/tmp",
    "CORE_TMPDIR_MAXAGE" => array(
        "val" => "2",
        "desc" => N_("core_tmpdir_maxage") ,
        "user" => "N",
        "global" => "Y"
    ) ,
    "CORE_DBCONNECT" => array(
        "val" => "unpersistent",
        "descr" => N_("connection type") ,
        "user" => "N",
        "style" => "N",
        "kind" => "enum(unpersistent|persistent)",
        "global" => "Y"
    ) ,

    "CORE_SQLSTRICT" => array(
        "val" => "yes",
        "descr" => N_("stop on sql error") ,
        "user" => "N",
        "style" => "N",
        "kind" => "enum(yes|no)",
        "global" => "Y"
    ) ,
    "CORE_DBDOCVIEWCOMPAT" => array(
        "val" => "no",
        "descr" => N_("Use document's table compatibility") ,
        "user" => "N",
        "style" => "N",
        "kind" => "enum(yes|no)",
        "global" => "Y"
    ) ,
    // Layout Param
    "CORE_BGCOLOR" => array(
        "val" => "url('CORE/Images/bg.gif')",
        "descr" => N_("background color or image") ,
        "user" => "N",
        "kind" => "readonly",
        "style" => "N",
        "global" => "N"
    ) ,
    "CORE_SSLBGCOLOR" => array(
        "val" => "url('CORE/Images/bgssl.gif')",
        "descr" => N_("background color or image in security mode") ,
        "user" => "N",
        "kind" => "readonly",
        "style" => "Y",
        "global" => "N"
    ) ,
    "CORE_FGIMG" => array(
        "val" => "none",
        "descr" => N_("background image for bar") ,
        "user" => "N",
        "style" => "Y",
        "global" => "N",
        "kind" => "readonly"
    ) ,
    "CORE_FGIMGMENU" => array(
        "val" => "none",
        "descr" => N_("background image for menu") ,
        "user" => "N",
        "style" => "Y",
        "global" => "N",
        "kind" => "readonly"
    ) ,
    "CORE_BGCELLCOLOR" => array(
        "val" => "snow",
        "descr" => N_("background color for table cells") ,
        "user" => "N",
        "kind" => "readonly",
        "style" => "Y",
        "global" => "N"
    ) , // normal bg in cells
    "CORE_BGCOLORALTERN" => array(
        "val" => "#DEDEEF",
        "descr" => N_("second background color") ,
        "user" => "N",
        "kind" => "readonly",
        "style" => "Y",
        "global" => "N"
    ) ,
    "CORE_BGCOLORHIGH" => array(
        "val" => "lightsteelblue",
        "descr" => N_("highlight background color") ,
        "user" => "N",
        "kind" => "readonly",
        "style" => "Y",
        "global" => "N"
    ) ,
    "CORE_FGCOLOR" => array(
        "val" => "darkslateblue",
        "descr" => N_("inverse video background color") ,
        "user" => "N",
        "kind" => "readonly",
        "style" => "Y",
        "global" => "N"
    ) , // inverse video bg
    "CORE_TEXTFGCOLOR" => array(
        "val" => "black",
        "descr" => N_("text color") ,
        "user" => "N",
        "kind" => "readonly",
        "style" => "Y",
        "global" => "N"
    ) , // normal text
    "CORE_TEXTBGCOLOR" => array(
        "val" => "white",
        "descr" => N_("inverse video color text") ,
        "user" => "N",
        "kind" => "readonly",
        "style" => "Y",
        "global" => "N"
    ) , // inverse video text
    "CORE_INPUTBGCOLOR" => array(
        "val" => "#b8ceef",
        "descr" => N_("input color bg") ,
        "user" => "N",
        "kind" => "readonly",
        "style" => "Y",
        "global" => "N"
    ) , // input color bg
    "CORE_ACOLOR" => array(
        "val" => "dodgerblue",
        "descr" => N_("anchor color") ,
        "user" => "N",
        "kind" => "readonly",
        "style" => "Y",
        "global" => "N"
    ) , // anchor color
    "CORE_ERRORCOLOR" => array(
        "val" => "#E51616",
        "descr" => N_("error color") ,
        "user" => "N",
        "kind" => "readonly",
        "style" => "Y",
        "global" => "N"
    ) ,
    
    "HELP_PUBURL" => array(
        "val" => "doc",
        "descr" => N_("top url to find help documentation") ,
        "user" => "N",
        "style" => "N",
        "global" => "N"
    ) ,
    
    "CORE_FULLWIDTH" => array(
        "val" => "100%",
        "descr" => N_("frame size") ,
        "user" => "N",
        "style" => "Y",
        "global" => "N"
    ) ,
    "CORE_SEPWIDTH" => array(
        "val" => "5",
        "descr" => N_("frame border size") ,
        "user" => "N",
        "style" => "Y",
        "global" => "N"
    ) ,
    
    "CORE_CLIENT" => array(
        "val" => "&lt;N O M&nbsp;&nbsp;&nbsp;&nbsp;D U&nbsp;&nbsp;&nbsp;&nbsp;C L I E N T&gt;",
        "descr" => N_("client name") ,
        "user" => "N",
        "style" => "N",
        "global" => "Y"
    ) ,
    "DYNACASE_FAVICO" => array(
        "val" => "CORE/Images/dynacase.ico",
        "descr" => N_("Dynacase pages favico") ,
        "user" => "N",
        "style" => "N",
        "global" => "Y"
    ) ,
    "CORE_LOGOCLIENT" => array(
        "val" => "CORE/Images/logo-mini.png",
        "descr" => N_("client logo") ,
        "user" => "N",
        "style" => "N",
        "global" => "Y"
    ) ,
    "CORE_URLINDEX" => array(
        "val" => "",
        "descr" => N_("url to reach http server index") ,
        "user" => "N",
        "style" => "N",
        "global" => "Y"
    ) ,
    "CORE_OPENURL" => array(
        "val" => "",
        "descr" => N_("url to reach http server index in open mode") ,
        "user" => "N",
        "style" => "N",
        "global" => "Y"
    ) ,
    "MEMORY_LIMIT" => array(
        "val" => "64",
        "descr" => N_("memory max for PHP in Mo") ,
        "user" => "N",
        "style" => "N",
        "global" => "Y"
    ) ,
    "CORE_SOCSTYLE" => array(
        "val" => "",
        "descr" => N_("society style") ,
        "style" => "N",
        "global" => "Y"
    ) ,
    "CORE_PLUGZONE" => array(
        "val" => "",
        "descr" => N_("plug inserted in footer") ,
        "style" => "N",
        "global" => "Y"
    ) ,
    "CORE_PASSWDDELAY" => array(
        "val" => "0",
        "descr" => N_("default delay before expiration of password in day") ,
        "style" => "N",
        "global" => "Y"
    ) ,
    "CORE_REALM" => array(
        "val" => "Dynacase",
        "descr" => N_("realm name for http authenticate") ,
        "style" => "N",
        "global" => "Y"
    ) ,
    "CORE_MOTD" => array(
        "val" => "",
        "descr" => N_("mot of the day") ,
        "style" => "N",
        "global" => "Y"
    ) ,
    "CORE_ICONSIZE" => array(
        "val" => "small",
        "descr" => N_("icon size") ,
        "user" => "Y",
        "style" => "N",
        "kind" => "readonly",
        "global" => "Y"
    ) ,
    "CORE_LOGDURATION" => array(
        "val" => "30",
        "descr" => N_("duration for log conservation (in days)") ,
        "style" => "N",
        "global" => "Y"
    ) ,
    // Mail link production, see setMailAnchor in Lib.Common.php
    "CORE_MAIL_LINK" => array(
        "val" => "optimal",
        "descr" => N_("produce link for") ,
        "user" => "Y",
        "kind" => "enum(optimal|mailto)",
        "global" => "Y"
    ) ,
    "CORE_START_APP" => array(
        "val" => "CORE",
        "descr" => N_("default start application") ,
        "user" => "N",
        "global" => "Y"
    ) ,
    // Session
    "CORE_SESSIONTTL" => array(
        "val" => "0",
        "descr" => N_("core_sessionttl") ,
        "user" => "N",
        "global" => "Y"
    ) ,
    "CORE_GUEST_SESSIONTTL" => array(
        "val" => "3600",
        "descr" => N_("core_guest_sessionttl") ,
        "user" => "N",
        "global" => "Y",
        "kind" => "static"
    ) ,
    "CORE_SESSIONMAXAGE" => array(
        "val" => "1 week",
        "descr" => N_("core_sessionmaxage") ,
        "user" => "N",
        "global" => "Y",
        "kind" => "enum(1 day|1 week|1 month)"
    ) ,
    "CORE_SESSIONGCPROBABILITY" => array(
        "val" => "0.01",
        "descr" => N_("core_sessiongcprobability") ,
        "user" => "N",
        "global" => "Y"
    ) ,
    // Layout->execute recursion limit
    "CORE_LAYOUT_EXECUTE_RECURSION_LIMIT" => array(
        "val" => "30",
        "descr" => N_("core_layout_execute_recursion_limit") ,
        "user" => "N",
        "global" => "Y"
    ) ,
    // Allow use of guest.php
    "CORE_ALLOW_GUEST" => array(
        "val" => "yes",
        "descr" => N_("Allow guest access") ,
        "kind" => "enum(yes|no)",
        "global" => "Y"
    ) ,
    "CORE_MAILACTION" => array(
        "val" => "",
        "descr" => N_("Mail action URL") ,
        "user" => "N",
        "global" => "Y"
    )
);

if (file_exists('WHAT/Lib.Prefix.php')) {
    include_once ('WHAT/Lib.Prefix.php');
}
if (file_exists('CORE/lang.php')) {
    include_once ("CORE/lang.php");
}

if (isset($lang)) {
    $tl = array();
    foreach ($lang as $k => $v) {
        $tl[] = $k;
    }
    $ll = implode("|", $tl);
    $app_const["CORE_LANG"] = array(
        "val" => "fr_FR",
        "descr" => N_("language") ,
        "user" => "Y",
        "style" => "N",
        "kind" => "enum(" . $ll . ")",
        "global" => "Y"
    );
}
