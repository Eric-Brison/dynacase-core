#!/bin/bash

if [ "$freedom_context" == "" ]; then
  . /etc/freedom.conf
   wchoose -b
fi

. $wpub/log.sh
. $wpub/libutil.sh

if [ -z "$pgservice_core" ]; then
    echo "Env variable pgservice_core is empty !"
    echo "Check your context for missing or misconfigured environment variables."
    exit 1
fi

#------------------------------
#post installation
#------------------------------
if [ "$1" = "I" ] ; then

    log "Checking if the database service $pgservice_core is running and available..."
    PGSERVICE=$pgservice_core pgIsRunning
    RET=$?
    if [ $RET -ne 0 ]; then
	echo "Could not connect to database service $pgservice_core) !"
	echo "Check that your database is running and acessible with the service from pgservice.conf."
	exit $RET
    fi

    log "Checking if plpsgql language is active on database service $pgservice_core..."
    PGSERVICE=$pgservice_core pgLanguageExists "plpgsql"
    RET=$?
    if [ $RET -ne 0 ]; then
	log "Trying to active plpgsql language on database service $pgservice_core..."
	OUT=`PGSERVICE="$pgservice_core" psql -c 'CREATE LANGUAGE plpgsql;' 2> /dev/null`
	RET=$?
	if [ $RET -ne 0 ]; then
	    echo "An error occured while creating language plpgsql : $RET"
	    exit $RET
	fi
    fi

    log "Executing $wpub/WHAT/getprivilege.sql in database service $pgservice_core..."
    PGSERVICE=$pgservice_core pgExecuteSqlFile $wpub/WHAT/getprivilege.sql
    RET=$?
    if [ $RET -ne 0 ]; then
	echo "An error occured while executing $wpub/WHAT/getprivilege.sql : $RET"
	exit $RET
    fi

    log "Getting current database..."
    DATABASE=`PGSERVICE="$pgservice_core" psql -At -c "SELECT current_database();" 2> /dev/null`
    RET=$?
    if [ $RET -ne 0 ]; then
	echo "An error occured while querying current database name : $RET"
	exit $RET
    fi


    $wpub/programs/core_appinitialize
    $wpub/wsh.php --api=updateclass --dbcoord="service='$pgservice_core'" --class=Application
    $wpub/wsh.php --api=updateclass --dbcoord="service='$pgservice_core'" --class=Action
    $wpub/wsh.php --api=updateclass --dbcoord="service='$pgservice_core'" --class=Style
    $wpub/wsh.php --api=updateclass --dbcoord="service='$pgservice_core'" --class=ParamDef
    $wpub/wsh.php --api=updateclass --dbcoord="service='$pgservice_core'" --class=Param
    $wpub/wsh.php --api=updateclass --dbcoord="service='$pgservice_core'" --class=User
    $wpub/wsh.php --api=updateclass --dbcoord="service='$pgservice_core'" --class=Group
    $wpub/wsh.php --api=updateclass --dbcoord="service='$pgservice_core'" --class=Permission
    $wpub/wsh.php --api=updateclass --dbcoord="service='$pgservice_core'" --class=Acl
    $wpub/wsh.php --api=updateclass --dbcoord="service='$pgservice_core'" --class=Session

    $wpub/wsh.php  --api=appadmin --appname=CORE
fi


#------------------------------
#post update
#------------------------------
if [ "$1" = "U" ] ; then

    log "Setting CORE_DB in paramv..."
    PGSERVICE="$pgservice_core" psql -c "UPDATE paramv SET val = 'service=''$pgservice_core''' WHERE name = 'CORE_DB'"
    RET=$?
    if [ $RET -ne 0 ]; then
	echo "Error setting CORE_DB"
        exit $RET
    fi

    log "Setting CORE_PUBDIR in paramv..."
    PGSERVICE="$pgservice_core" psql -c "UPDATE paramv SET val = '$wpub' WHERE name = 'CORE_PUBDIR'"
    RET=$?
    if [ $RET -ne 0 ]; then
	echo "Error setting CORE_PUBDIR"
	exit $RET
    fi

    #add permission functionnalities
    log "Executing $wpub/WHAT/getprivilege.sql in database service $pgservice_core..."
    PGSERVICE=$pgservice_core pgExecuteSqlFile $wpub/WHAT/getprivilege.sql
    RET=$?
    if [ $RET -ne 0 ]; then
	echo "An error occured while executing $wpub/WHAT/getprivilege.sql : $RET"
	exit $RET
    fi

    $wpub/wsh.php  --api=import_size 
    $wpub/wsh.php  --api=import_style --name=DEFAULT
    $wpub/wsh.php  --api=import_style --name=ORIGINAL
    $wpub/wsh.php  --api=import_style --name=MODERN
    echo 'delete from permission where abs(id_acl) not in (select id from acl where acl.id_application=permission.id_application)' | PGSERVICE=$pgservice_core psql
fi

#------------------------------
#post uninstallation
#------------------------------
if [ "$1" = "D" ] ; then

  set -e

#  grep -v 'Include %{destdir}/apache.conf' /etc/httpd/conf/httpd.conf > /tmp/httpd.conf
#  mv /tmp/httpd.conf /etc/httpd/conf/httpd.conf
#
#  # Remove what from syslog
#  echo "Remove what.log from syslog"
#  cp /etc/syslog.conf /etc/syslog.conf.sav
#  cat /etc/syslog.conf.sav | grep -v "^local6.*/var/log/what.log.*$" > /etc/syslog.conf
#  /etc/rc.d/init.d/syslog restart
#  rm -f /etc/logrotate.d/what
#
#  # drop anakeen database and user
#  log "The $dbname database will be dropped, we save a dump in /tmp/anakeen$$.dump"
#  sulog  postgres  "pg_dump -d $dbname >/tmp/anakeen$$.dump"
#  sulog  postgres  "dropuser anakeen" 
#  sulog  postgres  "dropdb $dbname"
#
#  log "Unregister DB $dbname for automatic dump"
#  mv /etc/ankpsql-tools/base-list /etc/ankpsql-tools/base-list.old
#  cat /etc/ankpsql-tools/base-list.old | grep -v "^$dbname$" > /etc/ankpsql-tools/base-list
#  rm -f /etc/ankpsql-tools/base-list.old
fi

exit 0
