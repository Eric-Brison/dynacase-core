CREATE OR REPLACE FUNCTION [docname]_copysearch() RETURNS trigger AS $$
declare
        searchesValues text;
        fullValues tsvector;
        rowExists bool;
begin

if NEW.doctype != 'T' then
        searchesValues :=
[BLOCK SEARCHFIELD]
   '£' || coalesce(NEW.[attrid]::text,'') ||[ENDBLOCK SEARCHFIELD] '£';

    begin
        fullValues := setweight2(NEW.title, 'A')
[BLOCK ABSATTR]
     || setweight2(NEW.[attrid]::text, 'B')    [ENDBLOCK ABSATTR]

[BLOCK FILEATTR2]
     ||  setweight2(NEW.[attrid]::text, 'D')   [ENDBLOCK FILEATTR2]

[BLOCK FULLTEXT_C]
     || setweight2(NEW.[attrid]::text, 'C')    [ENDBLOCK FULLTEXT_C];

    EXCEPTION
    WHEN OTHERS THEN
	  RAISE NOTICE 'fulltext not set %',NEW.id;
    end;
  select true into rowExists from search.[docname] where id=NEW.id;
  if (rowExists) then
        update search.[docname] set svalues=searchesValues,  fulltext=fullValues where id=NEW.id;
  else
        insert into search.[docname] (id, svalues, fulltext) values (NEW.id, searchesValues,fullValues);
  end if;
end if;
return NEW;
end;
$$ LANGUAGE 'plpgsql';



CREATE OR REPLACE FUNCTION upval[docid]() RETURNS trigger AS $$
declare	
begin

[BLOCK ATTRFIELD]
if not NEW.[attrid] isnull then
  NEW.values := NEW.values || '£' || NEW.[attrid]::text;
  NEW.attrids := NEW.attrids || '£' || '[attrid]';
end if;
[ENDBLOCK ATTRFIELD]


[IF hasattr]
NEW.values := NEW.values || '£';
NEW.attrids := NEW.attrids || '£';
[ENDIF hasattr]

return NEW;
end;
$$ LANGUAGE 'plpgsql'; 


